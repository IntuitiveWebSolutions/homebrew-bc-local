# This file was generated by GoReleaser. DO NOT EDIT.
cask "bc-local-beta" do
  name "bc-local-beta"
  desc "Local BriteCore Dev Environment (Beta)"
  homepage ""
  version "0.15.0"

  livecheck do
    skip "Auto-generated on release."
  end

  binary "bc-local-beta"
  depends_on cask: [
      "podman-desktop",
    ],
    formula: [
      "awscli",
      "gettext",
      "gh",
      "go-task",
      "helm",
      "jq",
      "kind",
      "kubectl",
      "podman",
      "sops",
      "uv",
      "yq",
    ]

  on_macos do
    on_intel do
      url "https://github.com/IntuitiveWebSolutions/bc-local/releases/download/v#{version}/bc-local-beta_#{version}_darwin_amd64.tar.gz",
        header: [
          "Accept: application/octet-stream",
          "Authorization: bearer #{GitHub::API.credentials}",
        ]
      sha256 "06cdc69900542fbe883c7544f51a3eabc6837c0cd75c3e6ceb402cae8df9e112"
    end
    on_arm do
      url "https://github.com/IntuitiveWebSolutions/bc-local/releases/download/v#{version}/bc-local-beta_#{version}_darwin_arm64.tar.gz",
        header: [
          "Accept: application/octet-stream",
          "Authorization: bearer #{GitHub::API.credentials}",
        ]
      sha256 "6bf3e041fc6bb4e1547318f9a79de0f1bef3f1d36e2a3cf02b83f787c9f880c9"
    end
  end

  on_linux do
    on_intel do
      url "https://github.com/IntuitiveWebSolutions/bc-local/releases/download/v#{version}/bc-local-beta_#{version}_linux_amd64.tar.gz",
        header: [
          "Accept: application/octet-stream",
          "Authorization: bearer #{GitHub::API.credentials}",
        ]
      sha256 "eb9fd8c1902776335289d08712150d757277ffa1f7a5e8be1d6df7fcd42e3d38"
    end
    on_arm do
      url "https://github.com/IntuitiveWebSolutions/bc-local/releases/download/v#{version}/bc-local-beta_#{version}_linux_arm64.tar.gz",
        header: [
          "Accept: application/octet-stream",
          "Authorization: bearer #{GitHub::API.credentials}",
        ]
      sha256 "92545a673aec2a97ebb4f5dc5a65695db43a0c24318008134786060fb9e11d28"
    end
  end

  postflight do
    ENV['PATH'] = "/opt/homebrew/bin:/usr/local/bin:~/.local/bin:#{ENV['PATH']}"

    if system_command("/usr/bin/xattr", args: ["-h"]).exit_status == 0
      system_command "/usr/bin/xattr", args: ["-dr", "com.apple.quarantine", "#{staged_path}/bc-local-beta"]
    end

    # Check if britecore-cli is already installed
    if !File.executable?("#{Dir.home}/.local/bin/britecore-cli")
      puts "britecore-cli not found, installing..."

      # Find task binary in common locations
      task_binary = nil
      ["/opt/homebrew/bin/task", "/usr/local/bin/task", "/usr/bin/task"].each do |path|
        if File.executable?(path)
          task_binary = path
          break
        end
      end

      if task_binary
        puts "Using task binary at: #{task_binary}"
        system_command task_binary, args: ["-t", "#{staged_path}/Taskfile.yaml", "install-cli"]
      else
        puts "Warning: task binary not found. Please install go-task and run 'task install-cli' manually."
      end
    else
      puts "britecore-cli already installed at ~/.local/bin/britecore-cli"
    end
  end

  # No zap stanza required
end
